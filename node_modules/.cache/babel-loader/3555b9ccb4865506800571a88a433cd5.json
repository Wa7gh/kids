{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/netchiled/src/Component/Movie.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY';\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA';\nconst result = 10;\nvar finalURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=\".concat(channelID, \"&maxResults=\").concat(result, \"&key=\").concat(API);\nexport default class Listing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allVidio: [],\n      selectVidio: \"\"\n    };\n\n    this.clicked = () => {\n      console.log(this.state.allVidio[0].id.videoId);\n      this.setState({\n        selectVidio: \"https://www.youtube.com/embed/\" + this.state.allVidio[0].id.videoId\n      });\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(finalURL).then(response => response.json()).then(res => {\n      console.log(res.items);\n      this.setState({\n        allVidio: res.items\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  //    \"https://www.youtube.com/embed/\" + [\"\"0\"\"].id.videoId\n  render() {\n    console.log(this.state.allVidio); // console.log(finalURL)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"get video\"), React.createElement(\"iframe\", {\n      key: 0,\n      width: \"560\",\n      height: \"315\",\n      src: this.state.selectVidio,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenerpord\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"this.state.allVideo.map(video=>\", // <Right allVidio = {this.state. allVidio}  />\n    React.createElement(Right, {\n      allVidio: video,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \")\", this.state.allVideo.map(item => React.createElement(Right, {\n      allVidio: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Left, {\n      selectVidio: this.state.selectVidio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/netchiled/src/Component/Movie.js"],"names":["React","Component","axios","Right","Left","API","channelID","result","finalURL","Listing","constructor","state","allVidio","selectVidio","clicked","console","log","id","videoId","setState","onClick","bind","componentDidMount","fetch","then","response","json","res","items","catch","error","render","video","allVideo","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAMC,GAAG,GAAG,yCAAZ;AACA,MAAMC,SAAS,GAAG,0BAAlB;AACA,MAAMC,MAAM,GAAE,EAAd;AACA,IAAIC,QAAQ,iFAAyEF,SAAzE,yBAAiGC,MAAjG,kBAA+GF,GAA/G,CAAZ;AAIA,eAAe,MAAMI,OAAN,SAAsBR,SAAtB,CAAgC;AAC5CS,EAAAA,WAAW,GAAE;AACT;AADS,SAIdC,KAJc,GAIN;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAJM;;AAAA,SA4BdC,OA5Bc,GA4BN,MAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBK,EAAvB,CAA0BC,OAAtC;AAEC,WAAKC,QAAL,CAAc;AACVN,QAAAA,WAAW,EAAE,mCAAkC,KAAKF,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBK,EAAvB,CAA0BC;AAD/D,OAAd;AAIE,KAnCa;;AAET,SAAKE,OAAL,GAAa,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAb;AACH;;AAQFC,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAACf,QAAD,CAAL,CACCgB,IADD,CACOC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,GAAD,IAAQ;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,KAAhB;AACA,WAAKT,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAGe,GAAG,CAACC;AADL,OAAd;AAIH,KARD,EASCC,KATD,CASQC,KAAD,IAAU;AACjBf,MAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;AACC,KAXD;AAaH;;AAWH;AACIC,EAAAA,MAAM,GAAG;AACLhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAvB,EADK,CAGL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,KAApC;AAA0C,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,WAA1D;AACY,MAAA,WAAW,EAAC,GADxB;AAC4B,MAAA,KAAK,EAAC,yEADlC;AAEY,MAAA,eAAe,MAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAUZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEA;AACA,wBAAC,KAAD;AAAO,MAAA,QAAQ,EAAImB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,OAQP,KAAKrB,KAAL,CAAWsB,QAAX,CAAoBC,GAApB,CAAwBC,IAAI,IAAE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CARO,EASE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAG,KAAKxB,KAAL,CAAWE,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADR,CAVY,CADJ;AA0CH;;AArF0C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left'\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY'\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA'\nconst result =10;\nvar finalURL =`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelID}&maxResults=${result}&key=${API}`\n\n\n\nexport default class Listing extends Component {\n   constructor(){\n       super();\n       this.onClick=this.onClick.bind(this)\n   }\n  state = {\n      allVidio :[],\n      selectVidio :\"\",\n\n\n  }\n\n  componentDidMount(){\n\n      fetch(finalURL)\n      .then((response)=> response.json())\n      .then((res)=> {\n          console.log(res.items)\n          this.setState({\n              allVidio : res.items\n          })\n      \n      })\n      .catch((error)=> {\n      console.error(error);\n      });\n\n  }\n\n  clicked=()=>{\nconsole.log(this.state.allVidio[0].id.videoId);\n\n this.setState({\n     selectVidio: \"https://www.youtube.com/embed/\" +this.state.allVidio[0].id.videoId\n })\n\n  }\n\n//    \"https://www.youtube.com/embed/\" + [\"\"0\"\"].id.videoId\n    render() {\n        console.log(this.state.allVidio)\n\n        // console.log(finalURL)\n        return (\n            <div>\n   \n                <button onClick={this.clicked}>get video</button>\n                <iframe key ={0} width=\"560\" height=\"315\" src={this.state.selectVidio}\n                            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                            allowFullScreen></iframe>\n\n\n\n\n<div>\n        <div className= \"contenerpord\"> \n        this.state.allVideo.map(video=>{\n        // <Right allVidio = {this.state. allVidio}  />\n        <Right allVidio = {video}  />\n\n\n        })\n\n{this.state.allVideo.map(item=><Right allVidio={item}/>  )}\n          <Left selectVidio ={this.state.selectVidio}/> \n  \n        </div>\n      </div>\n\n\n                    {\n                        // this.state.result.map((link,i)=> {\n                        //     console.log(link);\n                        //     var frame =   <iframe key = {i} width=\"560\" height=\"315\" src={link}\n                        //     frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                        //     allowFullScreen></iframe>\n\n                        //     return frame;\n                        // })\n                    }\n                    {/* {this.frame} */}\n               \n              \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}