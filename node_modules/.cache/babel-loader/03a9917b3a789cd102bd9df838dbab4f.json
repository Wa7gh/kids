{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/netchiled/src/Component/Movie.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY';\nconst channelID = 'UCx27Pkk8plpiosF14qXq-VA';\nconst result = 10;\nvar finalURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=\".concat(channelID, \"&maxResults=\").concat(result, \"&q=surfing&key=\").concat(API); // https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UCx27Pkk8plpiosF14qXq-VA&maxResults=2&q=surfing&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n\nexport default class Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allVidio: [],\n      EventSelect: null\n    };\n\n    this.handelEventselect = ele => {\n      this.setState({\n        EventSelect: ele\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(finalURL).then(response => response.json()).then(res => {\n      console.log(res);\n\n      if (res.code !== 403) {\n        this.setState({\n          allVidio: res.items\n        });\n      } else {\n        this.setState({\n          allVidio: [{\n            \"id\": \"7lCDEYXw3mM\",\n            \"kind\": \"youtube#video\",\n            \"etag\": \"\\\"UCBpFjp2h75_b92t44sqraUcyu0/iYynQR8AtacsFUwWmrVaw4Smb_Q\\\"\",\n            \"snippet\": {\n              \"publishedAt\": \"2012-06-20T22:45:24.000Z\",\n              \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\",\n              \"title\": \"Google I/O 101: Q&A On Using Google APIs\",\n              \"description\": \"Antonio Fuentes speaks to us and takes questions on working with Google APIs and OAuth 2.0.\",\n              \"thumbnails\": {\n                \"default\": {\n                  \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/default.jpg\"\n                },\n                \"medium\": {\n                  \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/mqdefault.jpg\"\n                },\n                \"high\": {\n                  \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/hqdefault.jpg\"\n                }\n              },\n              \"categoryId\": \"28\"\n            },\n            \"contentDetails\": {\n              \"duration\": \"PT15M51S\",\n              \"aspectRatio\": \"RATIO_16_9\"\n            },\n            \"statistics\": {\n              \"viewCount\": \"3057\",\n              \"likeCount\": \"25\",\n              \"dislikeCount\": \"0\",\n              \"favoriteCount\": \"17\",\n              \"commentCount\": \"12\"\n            },\n            \"status\": {\n              \"uploadStatus\": \"STATUS_PROCESSED\",\n              \"privacyStatus\": \"PRIVACY_PUBLIC\"\n            }\n          }]\n        });\n      } // console.log(allVidio)\n\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  // gett = () => {\n  //   fetch(finalURL)\n  //   .then(res => res.json())\n  //   .then(result => this.setState({ allVidio : result}))\n  //   .catch(e => console.log(e))\n  // }\n  // componentDidMount(){\n  //   this.gett()\n  // }\n  render() {\n    console.log(this.state.allVidio);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenerpord\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Left, {\n      allVidio: this.state.allVidio,\n      handelEventselect: this.handelEventselect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), this.state.EventSelect !== null && React.createElement(Right, {\n      EventSelect: this.state.EventSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n} //   }\n// export default class Listing extends Component {\n//   constructor(props){\n//       super(props);\n//       this.state = {\n//         allVidio :[],\n//         selectVidio :\"\",\n//     }\n//      this.clicked=this.clicked.bind(this)\n//   }\n//   componentDidMount(){\n//       fetch(finalURL)\n//       .then((response)=> response.json())\n//       .then((res)=> {\n//           console.log(res.items)\n//           this.setState({\n//               allVidio : res.items\n//           })\n//       })\n//       .catch((error)=> {\n//       console.error(error);\n//       });\n//   }\n//   clicked=()=>{\n// console.log(this.state.allVidio[0].id.videoId);\n//  this.setState({\n//      selectVidio: \"https://www.youtube.com/embed/\" +this.state.allVidio[0].id.videoId\n//  })\n//   }\n//     render() {\n//         console.log(this.state.allVidio)\n//         console.log(this.state)\n//         // var  videoList = this.props.video.map(item=> {\n//         //     return <Right video={item.snippet.title} />\n//         // })\n//         return (\n//             <div>\n//              { this.state.allVidio !=null && <Right video={this.state.allVidio}/>}\n//                 {/* {this.state.allVidio.map((item )=><Right allVidio={item}/>  )}   */}\n//                 <button onClick={this.clicked}>get video</button>\n//                 <iframe key ={0} width=\"560\" height=\"315\" src={this.state.selectVidio}\n//                             frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n//                             allowFullScreen></iframe> \n//                     {\n//                         // this.state.result.map((link,i)=> {\n//                         //     console.log(link);\n//                         //     var frame =   <iframe key = {i} width=\"560\" height=\"315\" src={link}\n//                         //     frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n//                         //     allowFullScreen></iframe>\n//                         //     return frame;\n//                         // })\n//                     }\n//                     {/* {this.frame} */}\n//          </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/macbook/Desktop/netchiled/src/Component/Movie.js"],"names":["React","Component","axios","Right","Left","API","channelID","result","finalURL","Movie","state","allVidio","EventSelect","handelEventselect","ele","setState","componentDidMount","fetch","then","response","json","res","console","log","code","items","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left'\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY'\nconst channelID = 'UCx27Pkk8plpiosF14qXq-VA'\nconst result =10;\nvar finalURL =`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelID}&maxResults=${result}&q=surfing&key=${API}`\n// https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UCx27Pkk8plpiosF14qXq-VA&maxResults=2&q=surfing&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\nexport default class Movie extends Component {\n state={\n        allVidio : [],\n     \n      EventSelect: null\n    }\n    \n  \ncomponentDidMount(){\n\n      fetch(finalURL)\n      .then((response)=> response.json())\n      .then((res)=> {\n      console.log(res)\n      if(res.code !== 403){\n        this.setState({\n          allVidio : res.items\n         })\n      }else{\n        this.setState({\n          allVidio : [{\n            \"id\": \"7lCDEYXw3mM\",\n            \"kind\": \"youtube#video\",\n            \"etag\": \"\\\"UCBpFjp2h75_b92t44sqraUcyu0/iYynQR8AtacsFUwWmrVaw4Smb_Q\\\"\",\n            \"snippet\": { \n             \"publishedAt\": \"2012-06-20T22:45:24.000Z\",\n             \"channelId\": \"UC_x5XG1OV2P6uZZ5FSM9Ttw\",\n             \"title\": \"Google I/O 101: Q&A On Using Google APIs\",\n             \"description\": \"Antonio Fuentes speaks to us and takes questions on working with Google APIs and OAuth 2.0.\",\n             \"thumbnails\": {\n              \"default\": {\n               \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/default.jpg\"\n              },\n              \"medium\": {\n               \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/mqdefault.jpg\"\n              },\n              \"high\": {\n               \"url\": \"https://i.ytimg.com/vi/7lCDEYXw3mM/hqdefault.jpg\"\n              }\n             },\n             \"categoryId\": \"28\"\n            },\n            \"contentDetails\": {\n             \"duration\": \"PT15M51S\",\n             \"aspectRatio\": \"RATIO_16_9\"\n            },\n            \"statistics\": {\n             \"viewCount\": \"3057\",\n             \"likeCount\": \"25\",\n             \"dislikeCount\": \"0\",\n             \"favoriteCount\": \"17\",\n             \"commentCount\": \"12\"\n            },\n            \"status\": {\n             \"uploadStatus\": \"STATUS_PROCESSED\",\n             \"privacyStatus\": \"PRIVACY_PUBLIC\"\n            }\n           }]\n         })\n      }\n             \n            \n       // console.log(allVidio)\n      })\n \n      .catch((error)=> {\n     console.error(error);\n      });\n        \n    }\n  \n    handelEventselect =( ele =>{\n  \n      this.setState ({\n        EventSelect  : ele\n      })\n    })\n\n  \n   \n\n    // gett = () => {\n    //   fetch(finalURL)\n    //   .then(res => res.json())\n    //   .then(result => this.setState({ allVidio : result}))\n    //   .catch(e => console.log(e))\n    // }\n  \n    // componentDidMount(){\n    //   this.gett()\n    // }\n\n\n  \n    \n    render() {\n        console.log(this.state.allVidio)\n        \n      return (\n        <div>\n          <div className= \"contenerpord\"> \n          <Left allVidio = {this.state.allVidio} handelEventselect ={this.handelEventselect} />\n      {this.state.EventSelect !== null && <Right EventSelect = {this.state.EventSelect} /> }\n    \n          </div>\n        </div>\n      \n      )\n    }\n}\n//   }\n// export default class Listing extends Component {\n//   constructor(props){\n//       super(props);\n\n//       this.state = {\n//         allVidio :[],\n//         selectVidio :\"\",\n  \n  \n//     }\n  \n//      this.clicked=this.clicked.bind(this)\n//   }\n \n//   componentDidMount(){\n\n//       fetch(finalURL)\n//       .then((response)=> response.json())\n//       .then((res)=> {\n//           console.log(res.items)\n//           this.setState({\n//               allVidio : res.items\n//           })\n      \n//       })\n//       .catch((error)=> {\n//       console.error(error);\n//       });\n\n//   }\n\n//   clicked=()=>{\n// console.log(this.state.allVidio[0].id.videoId);\n\n//  this.setState({\n//      selectVidio: \"https://www.youtube.com/embed/\" +this.state.allVidio[0].id.videoId\n//  })\n\n//   }\n\n\n//     render() {\n//         console.log(this.state.allVidio)\n//         console.log(this.state)\n//         // var  videoList = this.props.video.map(item=> {\n//         //     return <Right video={item.snippet.title} />\n//         // })\n//         return (\n//             <div>\n//              { this.state.allVidio !=null && <Right video={this.state.allVidio}/>}\n//                 {/* {this.state.allVidio.map((item )=><Right allVidio={item}/>  )}   */}\n\n\n//                 <button onClick={this.clicked}>get video</button>\n//                 <iframe key ={0} width=\"560\" height=\"315\" src={this.state.selectVidio}\n//                             frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n//                             allowFullScreen></iframe> \n\n\n          \n\n\n\n\n//                     {\n//                         // this.state.result.map((link,i)=> {\n//                         //     console.log(link);\n//                         //     var frame =   <iframe key = {i} width=\"560\" height=\"315\" src={link}\n//                         //     frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n//                         //     allowFullScreen></iframe>\n\n//                         //     return frame;\n//                         // })\n//                     }\n//                     {/* {this.frame} */}\n               \n              \n//          </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}