{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/netchiled/src/Component/main.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY';\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA';\nconst result = 10;\nvar finalURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=\".concat(channelID, \"&maxResults=\").concat(result, \"&key=\").concat(API);\nexport default class Listing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clicked = () => {\n      console.log(this.state.allVidio[0].id.videoId);\n      this.setState({\n        selectVidio: \"https://www.youtube.com/embed/\" + this.state.allVidio[0].id.videoId\n      });\n    };\n\n    this.state = {\n      allVidio: [],\n      selectVidio: \"\"\n    };\n    this.clicked = this.clicked.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(finalURL).then(response => response.json()).then(res => {\n      console.log(res.items);\n      this.setState({\n        allVidio: res.items\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    console.log(this.state.allVidio);\n    console.log(this.state); //    let r = this.state.allVideo.map((item )=> <Right allVidio={item}/>)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      key: 0,\n      width: \"560\",\n      height: \"315\",\n      src: this.state.selectVidio,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/netchiled/src/Component/main.js"],"names":["React","Component","axios","Right","Left","API","channelID","result","finalURL","Listing","constructor","props","clicked","console","log","state","allVidio","id","videoId","setState","selectVidio","bind","componentDidMount","fetch","then","response","json","res","items","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAMC,GAAG,GAAG,yCAAZ;AACA,MAAMC,SAAS,GAAG,0BAAlB;AACA,MAAMC,MAAM,GAAE,EAAd;AACA,IAAIC,QAAQ,iFAAyEF,SAAzE,yBAAiGC,MAAjG,kBAA+GF,GAA/G,CAAZ;AAIA,eAAe,MAAMI,OAAN,SAAsBR,SAAtB,CAAgC;AAC7CS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA8BlBC,OA9BkB,GA8BV,MAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC,OAAtC;AAEC,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,mCAAkC,KAAKL,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC;AAD/D,OAAd;AAIE,KArCiB;;AAGd,SAAKH,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXI,MAAAA,WAAW,EAAE;AAFF,KAAb;AAOD,SAAKR,OAAL,GAAa,KAAKA,OAAL,CAAaS,IAAb,CAAkB,IAAlB,CAAb;AACF;;AAEDC,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAACf,QAAD,CAAL,CACCgB,IADD,CACOC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,GAAD,IAAQ;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,KAAhB;AACA,WAAKT,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAGW,GAAG,CAACC;AADL,OAAd;AAIH,KARD,EASCC,KATD,CASQC,KAAD,IAAU;AACjBjB,MAAAA,OAAO,CAACiB,KAAR,CAAcA,KAAd;AACC,KAXD;AAaH;;AAYCC,EAAAA,MAAM,GAAG;AACLlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EAFK,CAIT;;AAGI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,GAAG,EAAG,CAAd;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,KAApC;AAA0C,MAAA,GAAG,EAAE,KAAKA,KAAL,CAAWK,WAA1D;AACY,MAAA,WAAW,EAAC,GADxB;AAC4B,MAAA,KAAK,EAAC,yEADlC;AAEY,MAAA,eAAe,MAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAWH;;AA3D0C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left'\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY'\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA'\nconst result =10;\nvar finalURL =`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelID}&maxResults=${result}&key=${API}`\n\n\n\nexport default class Listing extends Component {\n  constructor(props){\n      super(props);\n\n      this.state = {\n        allVidio :[],\n        selectVidio :\"\",\n  \n  \n    }\n  \n     this.clicked=this.clicked.bind(this)\n  }\n \n  componentDidMount(){\n\n      fetch(finalURL)\n      .then((response)=> response.json())\n      .then((res)=> {\n          console.log(res.items)\n          this.setState({\n              allVidio : res.items\n          })\n      \n      })\n      .catch((error)=> {\n      console.error(error);\n      });\n\n  }\n\n  clicked=()=>{\nconsole.log(this.state.allVidio[0].id.videoId);\n\n this.setState({\n     selectVidio: \"https://www.youtube.com/embed/\" +this.state.allVidio[0].id.videoId\n })\n\n  }\n\n\n    render() {\n        console.log(this.state.allVidio)\n        console.log(this.state)\n\n    //    let r = this.state.allVideo.map((item )=> <Right allVidio={item}/>)\n\n\n        return (\n            <div>\n             {/* <Right video={this.state.allVideo}/> */}\n                {/* {this.state.allVideo.map((item )=><Right allVidio={item}/>  )}   */}\n                {/* <button onClick={this.clicked}>get video</button> */}\n                <iframe key ={0} width=\"560\" height=\"315\" src={this.state.selectVidio}\n                            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                            allowFullScreen></iframe> \n              \n         </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}