{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/netchiled/src/Component/Movie.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY';\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA';\nconst result = 10;\nvar finalURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=\".concat(channelID, \"&maxResults=\").concat(result, \"&key=\").concat(API);\nexport default class Listing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clicked = () => {\n      console.log(this.state.allVidio[0].id.videoId);\n      this.setState({\n        selectVidio: \"https://www.youtube.com/embed/\" + this.state.allVidio[0].id.videoId\n      });\n    };\n\n    this.state = {\n      allVidio: [],\n      selectVidio: \"\"\n    }; //        this.onClick=this.onClick.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(finalURL).then(response => response.json()).then(res => {\n      console.log(res.items);\n      this.setState({\n        allVidio: res.items\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render(props) {\n    console.log(this.state.allVidio);\n    let r = this.state.allVideo.map(item => {\n      return React.createElement(Right, {\n        allVidio: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/netchiled/src/Component/Movie.js"],"names":["React","Component","axios","Right","Left","API","channelID","result","finalURL","Listing","constructor","props","clicked","console","log","state","allVidio","id","videoId","setState","selectVidio","componentDidMount","fetch","then","response","json","res","items","catch","error","render","r","allVideo","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAMC,GAAG,GAAG,yCAAZ;AACA,MAAMC,SAAS,GAAG,0BAAlB;AACA,MAAMC,MAAM,GAAE,EAAd;AACA,IAAIC,QAAQ,iFAAyEF,SAAzE,yBAAiGC,MAAjG,kBAA+GF,GAA/G,CAAZ;AAIA,eAAe,MAAMI,OAAN,SAAsBR,SAAtB,CAAgC;AAC7CS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA8BlBC,OA9BkB,GA8BV,MAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC,OAAtC;AAEC,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,mCAAkC,KAAKL,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBC,EAAvB,CAA0BC;AAD/D,OAAd;AAIE,KArCiB;;AAGd,SAAKH,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXI,MAAAA,WAAW,EAAE;AAFF,KAAb,CAHc,CAUpB;AACG;;AAEDC,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAACd,QAAD,CAAL,CACCe,IADD,CACOC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,GAAD,IAAQ;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAG,CAACC,KAAhB;AACA,WAAKR,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAGU,GAAG,CAACC;AADL,OAAd;AAIH,KARD,EASCC,KATD,CASQC,KAAD,IAAU;AACjBhB,MAAAA,OAAO,CAACgB,KAAR,CAAcA,KAAd;AACC,KAXD;AAaH;;AAYCC,EAAAA,MAAM,CAACnB,KAAD,EAAQ;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AAED,QAAIe,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,IAAU;AAAC,aAAQ,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAAkC,KAArE,CAAR;AAGC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AA8BH;;AA7E0C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Right from './Right';\nimport Left from './Left'\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY'\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA'\nconst result =10;\nvar finalURL =`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelID}&maxResults=${result}&key=${API}`\n\n\n\nexport default class Listing extends Component {\n  constructor(props){\n      super(props);\n\n      this.state = {\n        allVidio :[],\n        selectVidio :\"\",\n  \n  \n    }\n  \n//        this.onClick=this.onClick.bind(this)\n  }\n \n  componentDidMount(){\n\n      fetch(finalURL)\n      .then((response)=> response.json())\n      .then((res)=> {\n          console.log(res.items)\n          this.setState({\n              allVidio : res.items\n          })\n      \n      })\n      .catch((error)=> {\n      console.error(error);\n      });\n\n  }\n\n  clicked=()=>{\nconsole.log(this.state.allVidio[0].id.videoId);\n\n this.setState({\n     selectVidio: \"https://www.youtube.com/embed/\" +this.state.allVidio[0].id.videoId\n })\n\n  }\n\n\n    render(props) {\n        console.log(this.state.allVidio)\n\n       let r = this.state.allVideo.map((item )=> {return (<Right allVidio={item}/>)})\n\n\n        return (\n            <div>\n              {}\n                 {/* {this.state.allVideo.map((item )=><Right allVidio={item}/>  )} */}\n                {/* <button onClick={this.clicked}>get video</button>\n                <iframe key ={0} width=\"560\" height=\"315\" src={this.state.selectVidio}\n                            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                            allowFullScreen></iframe> */}\n\n\n          \n\n\n\n\n                    {\n                        // this.state.result.map((link,i)=> {\n                        //     console.log(link);\n                        //     var frame =   <iframe key = {i} width=\"560\" height=\"315\" src={link}\n                        //     frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                        //     allowFullScreen></iframe>\n\n                        //     return frame;\n                        // })\n                    }\n                    {/* {this.frame} */}\n               \n              \n         </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}