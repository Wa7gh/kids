{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/netchiled/src/Component/Movie.js\";\n// AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n//https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&allThreadsRelatedToChannelId=UCXgGY0wkgOzynnHvSEVmE3A&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n//https://www.googleapis.com/youtube/v3/activities?part=snippet,contentDetails&channelId=${channelID}&key=${API}\n//this one work \n//https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UCan48A3vtMqg1gvYmHl-iVA&maxResults=5&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY';\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA';\nconst result = 10;\nvar finalURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=\".concat(channelID, \"&maxResults=\").concat(result, \"&key=\").concat(API);\nexport default class Listing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: []\n    };\n    this.clicked = this.clicked.bind(this);\n  }\n\n  clicked() {\n    fetch(finalURL).then(response => response.json()).then(responseJson => {\n      console.log(responseJson);\n      const result = responseJson.items.map(obj => \"https://www.youtube.com/embed/\" + obj.id.videoId);\n      this.setState({\n        result\n      });\n      console.log(this.state.result);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    console.log(this.state.result); // console.log(finalURL)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"show=\", this.state.result), this.state.result.map((link, i) => {\n      console.log(link);\n      var frame = React.createElement(\"iframe\", {\n        key: i,\n        width: \"560\",\n        height: \"315\",\n        src: link,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n      return frame;\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/netchiled/src/Component/Movie.js"],"names":["React","Component","axios","API","channelID","result","finalURL","Listing","constructor","props","state","clicked","bind","fetch","then","response","json","responseJson","console","log","items","map","obj","id","videoId","setState","catch","error","render","link","i","frame"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,yCAAZ;AACA,MAAMC,SAAS,GAAG,0BAAlB;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,IAAIC,QAAQ,iFAA0EF,SAA1E,yBAAkGC,MAAlG,kBAAgHF,GAAhH,CAAZ;AAIA,eAAe,MAAMI,OAAN,SAAsBN,SAAtB,CAAgC;AAE3CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTL,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKM,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AACDD,EAAAA,OAAO,GAAG;AACNE,IAAAA,KAAK,CAACP,QAAD,CAAL,CACKQ,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,YAAD,IAAkB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,YAAMZ,MAAM,GAAGY,YAAY,CAACG,KAAb,CAAmBC,GAAnB,CAAuBC,GAAG,IAAI,mCAAmCA,GAAG,CAACC,EAAJ,CAAOC,OAAxE,CAAf;AACA,WAAKC,QAAL,CAAc;AAAEpB,QAAAA;AAAF,OAAd;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWL,MAAvB;AACH,KAPL,EAQKqB,KARL,CAQYC,KAAD,IAAW;AACdT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH,KAVL;AAYH;;AAGDC,EAAAA,MAAM,GAAG;AACLV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWL,MAAvB,EADK,CAEL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW,KAAKK,KAAL,CAAWL,MAAtB,CADJ,EAMQ,KAAKK,KAAL,CAAWL,MAAX,CAAkBgB,GAAlB,CAAsB,CAACQ,IAAD,EAAOC,CAAP,KAAa;AAC/BZ,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,UAAIE,KAAK,GAAG;AAAQ,QAAA,GAAG,EAAED,CAAb;AAAgB,QAAA,KAAK,EAAC,KAAtB;AAA4B,QAAA,MAAM,EAAC,KAAnC;AAAyC,QAAA,GAAG,EAAED,IAA9C;AACR,QAAA,WAAW,EAAC,GADJ;AACQ,QAAA,KAAK,EAAC,yEADd;AAER,QAAA,eAAe,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AAIA,aAAOE,KAAP;AACH,KAPD,CANR,CADJ;AAqBH;;AAlD0C","sourcesContent":["// AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n//https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&allThreadsRelatedToChannelId=UCXgGY0wkgOzynnHvSEVmE3A&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n\n//https://www.googleapis.com/youtube/v3/activities?part=snippet,contentDetails&channelId=${channelID}&key=${API}\n\n//this one work \n//https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UCan48A3vtMqg1gvYmHl-iVA&maxResults=5&key=AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY\n\nimport React, { Component } from 'react'\nimport axios from 'axios';\nconst API = 'AIzaSyDauqfEEKYaLV-tkZDCWHkgLycKWPjjeNY'\nconst channelID = 'UCan48A3vtMqg1gvYmHl-iVA'\nconst result = 10;\nvar finalURL = `https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelID}&maxResults=${result}&key=${API}`\n\n\n\nexport default class Listing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: [],\n\n        };\n        this.clicked = this.clicked.bind(this)\n    }\n    clicked() {\n        fetch(finalURL)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                console.log(responseJson)\n                const result = responseJson.items.map(obj => \"https://www.youtube.com/embed/\" + obj.id.videoId)\n                this.setState({ result });\n                console.log(this.state.result)\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n\n    }\n\n\n    render() {\n        console.log(this.state.result)\n        // console.log(finalURL)\n        return (\n            <div>\n                <div>show={this.state.result}</div>\n\n                {/* <button onClick={this.clicked}>get video</button> */}\n\n                {\n                    this.state.result.map((link, i) => {\n                        console.log(link);\n                        var frame = <iframe key={i} width=\"560\" height=\"315\" src={link}\n                            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen></iframe>\n\n                        return frame;\n                    })\n                }\n                {/* {this.frame} */}\n\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}